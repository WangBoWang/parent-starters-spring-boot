<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>com.wangbowang</groupId>
    <artifactId>starters-spring-boot</artifactId>
    <version>1.0-SNAPSHOT</version>
    <packaging>pom</packaging>

    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>1.5.4.RELEASE</version>
    </parent>

    <properties>
        <!--jdk-->
        <java.version>1.8</java.version>

        <!--maven-->
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
        <exec-maven-plugin.version>1.4.0</exec-maven-plugin.version>
        <maven-compiler-plugin.version>3.3</maven-compiler-plugin.version>
        <maven-shade-plugin.version>2.3</maven-shade-plugin.version>
        <maven-surefire-plugin.version>2.18.1</maven-surefire-plugin.version>
        <maven-archetype.version>2.4</maven-archetype.version>

        <!--testing-->
        <junit.version>4.12</junit.version>
        <powermock.version>1.6.6</powermock.version>
        <testng.version>6.10</testng.version>
        <rest-assured.version>3.0.1</rest-assured.version>
        <skip.unit-tests>false</skip.unit-tests>
        <skip.integration-tests>true</skip.integration-tests>

        <!--database-->
        <druid.version>1.0.26</druid.version>
        <mybatis.hazelcast.version>1.1.1</mybatis.hazelcast.version>
        <mybatis.spring.version>1.3.0</mybatis.spring.version>
        <org.mybatis.starter.version>1.1.1</org.mybatis.starter.version>
        <mysql.connector.version>5.1.40</mysql.connector.version>
        <pagehelper.version>4.1.6</pagehelper.version>
        <mybatis-plus.version>2.0.5</mybatis-plus.version>
        <!--logging-->
        <slf4j.version>1.7.21</slf4j.version>
        <lombok.version>1.16.12</lombok.version>

        <!--grpc-->
        <os.maven.plugin.version>1.4.1.Final</os.maven.plugin.version>
        <protobuf.maven.plugin.version>0.5.0</protobuf.maven.plugin.version>
        <grpc.version>1.4.0</grpc.version>

        <!--cache-->
        <hazelcast.version>3.8.3</hazelcast.version>
        <mybatis.hazelcast.version>1.1.1</mybatis.hazelcast.version>

        <!--spring-->
        <spring.version>4.3.11.RELEASE</spring.version>
        <spring.integration.version>4.3.11.RELEASE</spring.integration.version>
        <spring.integration.kafka.version>2.1.0.RELEASE</spring.integration.kafka.version>

        <!--message queue-->
        <spring.kafka.test.version>1.1.1.RELEASE</spring.kafka.test.version>
        <org.springframework.kafka.version>1.1.1.RELEASE</org.springframework.kafka.version>
        <com.fasterxml.jackson.core>2.8.1</com.fasterxml.jackson.core>

        <!--service discovery-->
        <zkclient.version>0.8</zkclient.version>

        <!-- security - shiro -->
        <spring.webmvc.version>4.3.2.RELEASE</spring.webmvc.version>
        <shiro.version>1.4.0</shiro.version>
        <servlet.api.version>2.5</servlet.api.version>

        <!-- swagger -->
        <swagger.version>2.6.1</swagger.version>

        <!-- axon framework and its related modules -->
        <axon.version>3.1-SNAPSHOT</axon.version>
        <jackson-datatype.version>2.9.0</jackson-datatype.version>
        <jgroups-kubernetes.version>1.0.4.RELEASE</jgroups-kubernetes.version>
        <quartz.version>2.2.1</quartz.version>
        <jsr310.version>2.6.5</jsr310.version>

        <!--quartz-->
        <quartz.version>2.2.1</quartz.version>

        <!-- druid -->
        <druid-spring-boot-starter.version>1.1.3</druid-spring-boot-starter.version>

        <!--mongodb-->
        <mongodb-starter.version>1.5.9.RELEASE</mongodb-starter.version>

        <!-- guava -->
        <guava.version>18.0</guava.version>

        <!-- module version -->
        <starters.version>1.0-SNAPSHOT</starters.version>
    </properties>

    <dependencies>
        <!--spring boot common starters-->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-actuator</artifactId>
        </dependency>

        <!--lombok-->
        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
            <version>${lombok.version}</version>
        </dependency>

        <!--testing-->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.testng</groupId>
            <artifactId>testng</artifactId>
            <version>${testng.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.hamcrest</groupId>
            <artifactId>hamcrest-core</artifactId>
            <version>${hamcrest.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.powermock</groupId>
            <artifactId>powermock-api-mockito</artifactId>
            <version>${powermock.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.powermock</groupId>
            <artifactId>powermock-module-testng</artifactId>
            <version>${powermock.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>io.rest-assured</groupId>
            <artifactId>rest-assured</artifactId>
            <version>${rest-assured.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>io.rest-assured</groupId>
            <artifactId>spring-mock-mvc</artifactId>
            <version>${rest-assured.version}</version>
            <scope>test</scope>
        </dependency>
    </dependencies>

    <profiles>
        <profile>
            <id>integration</id>
            <properties>
                <skip.unit-tests>false</skip.unit-tests>
                <skip.integration-tests>false</skip.integration-tests>
            </properties>
        </profile>
    </profiles>

    <modules>
        <module>dubbo-spring-boot-starter</module>
        <module>kafka-spring-boot-starter</module>
        <module>hazelcast-spring-boot-starter</module>
        <module>shiro-spring-boot-starter</module>
        <module>cors-spring-boot-starter</module>
        <module>mybatis-spring-boot-starter</module>
        <module>mybatisplus-spring-boot-starter</module>
        <module>grpc-spring-boot-starter</module>
        <module>swagger-spring-boot-starter</module>
        <module>locale-spring-boot-starter</module>
        <module>axon-spring-boot-starter</module>
        <module>logging-spring-boot-starter</module>
        <module>web-spring-boot-starter</module>
        <module>jpa-spring-boot-starter</module>
        <module>druid-spring-boot-starter</module>
        <module>mongo-spring-boot-starter</module>
        <module>elasticsearch-spring-boot-starter</module>
    </modules>

    <dependencyManagement>
        <dependencies>
            <!--spring-->
            <dependency>
                <groupId>org.springframework</groupId>
                <artifactId>spring-tx</artifactId>
                <version>${spring.version}</version>
            </dependency>
            <dependency>
                <groupId>org.springframework</groupId>
                <artifactId>spring-context-support</artifactId>
                <version>${spring.version}</version>
            </dependency>

            <!--hazelcast -->
            <dependency>
                <groupId>com.hazelcast</groupId>
                <artifactId>hazelcast-all</artifactId>
                <version>${hazelcast.version}</version>
            </dependency>

            <!-- grpc -->
            <dependency>
                <groupId>io.grpc</groupId>
                <artifactId>grpc-all</artifactId>
                <version>${grpc.version}</version>
            </dependency>
            <!-- mybatis -->
            <dependency>
                <groupId>org.mybatis.spring.boot</groupId>
                <artifactId>mybatis-spring-boot-starter</artifactId>
                <version>${org.mybatis.starter.version}</version>
            </dependency>
            <dependency>
                <groupId>mysql</groupId>
                <artifactId>mysql-connector-java</artifactId>
                <version>${mysql.connector.version}</version>
            </dependency>
            <dependency>
                <groupId>org.mybatis</groupId>
                <artifactId>mybatis-spring</artifactId>
                <version>${mybatis.spring.version}</version>
            </dependency>
            <dependency>
                <groupId>com.github.pagehelper</groupId>
                <artifactId>pagehelper</artifactId>
                <version>${pagehelper.version}</version>
            </dependency>
            <dependency>
                <groupId>com.alibaba</groupId>
                <artifactId>druid</artifactId>
                <version>${druid.version}</version>
            </dependency>
            <dependency>
                <groupId>org.mybatis.caches</groupId>
                <artifactId>mybatis-hazelcast</artifactId>
                <version>${mybatis.hazelcast.version}</version>
            </dependency>

            <!-- kafka -->
            <dependency>
                <groupId>org.springframework.integration</groupId>
                <artifactId>spring-integration-kafka</artifactId>
                <version>${spring.integration.kafka.version}</version>
                <scope>compile</scope>
            </dependency>
            <dependency>
                <groupId>org.springframework.integration</groupId>
                <artifactId>spring-integration-core</artifactId>
                <version>${spring.integration.version}</version>
                <scope>compile</scope>
            </dependency>
            <dependency>
                <groupId>org.springframework.kafka</groupId>
                <artifactId>spring-kafka</artifactId>
                <version>${org.springframework.kafka.version}</version>
            </dependency>
            <dependency>
                <groupId>org.springframework.kafka</groupId>
                <artifactId>spring-kafka-test</artifactId>
                <version>${org.springframework.kafka.version}</version>
                <scope>compile</scope>
            </dependency>

            <!-- https://mvnrepository.com/artifact/com.fasterxml.jackson.core/jackson-databind -->
            <dependency>
                <groupId>com.fasterxml.jackson.core</groupId>
                <artifactId>jackson-databind</artifactId>
                <version>${com.fasterxml.jackson.core}</version>
            </dependency>
            <!-- https://mvnrepository.com/artifact/com.fasterxml.jackson.core/jackson-annotations -->
            <dependency>
                <groupId>com.fasterxml.jackson.core</groupId>
                <artifactId>jackson-annotations</artifactId>
                <version>${com.fasterxml.jackson.core}</version>
            </dependency>
            <!-- shiro -->
            <dependency>
                <groupId>org.apache.shiro</groupId>
                <artifactId>shiro-core</artifactId>
                <version>${shiro.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.shiro</groupId>
                <artifactId>shiro-web</artifactId>
                <version>${shiro.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.shiro</groupId>
                <artifactId>shiro-spring</artifactId>
                <version>${shiro.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.shiro</groupId>
                <artifactId>shiro-hazelcast</artifactId>
                <version>${shiro.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.shiro</groupId>
                <artifactId>shiro-quartz</artifactId>
                <version>${shiro.version}</version>
                <scope>provided</scope>
            </dependency>
            <dependency>
                <groupId>javax.servlet</groupId>
                <artifactId>servlet-api</artifactId>
                <version>${servlet.api.version}</version>
                <scope>provided</scope>
            </dependency>

            <!--druid-spring-boot-starter-->
            <dependency>
                <groupId>com.alibaba</groupId>
                <artifactId>druid-spring-boot-starter</artifactId>
                <version>${druid-spring-boot-starter.version}</version>
            </dependency>

            <!--starters-->
            <dependency>
                <groupId>com.wangbowang</groupId>
                <artifactId>cors-spring-boot-starter</artifactId>
                <version>${starters.version}</version>
            </dependency>
            <dependency>
                <groupId>com.wangbowang</groupId>
                <artifactId>dubbo-spring-boot-starter</artifactId>
                <version>${starters.version}</version>
            </dependency>
            <dependency>
                <groupId>com.wangbowang</groupId>
                <artifactId>grpc-spring-boot-starter</artifactId>
                <version>${starters.version}</version>
            </dependency>
            <dependency>
                <groupId>com.wangbowang</groupId>
                <artifactId>hazelcast-spring-boot-starter</artifactId>
                <version>${starters.version}</version>
            </dependency>
            <dependency>
                <groupId>com.wangbowang</groupId>
                <artifactId>locale-spring-boot-starter</artifactId>
                <version>${starters.version}</version>
            </dependency>
            <dependency>
                <groupId>com.wangbowang</groupId>
                <artifactId>kafka-spring-boot-starter</artifactId>
                <version>${starters.version}</version>
            </dependency>
            <dependency>
                <groupId>com.wangbowang</groupId>
                <artifactId>mybatis-spring-boot-starter</artifactId>
                <version>${starters.version}</version>
            </dependency>
            <dependency>
                <groupId>com.wangbowang</groupId>
                <artifactId>shiro-spring-boot-starter</artifactId>
                <version>${starters.version}</version>
            </dependency>
            <dependency>
                <groupId>com.wangbowang</groupId>
                <artifactId>swagger-spring-boot-starter</artifactId>
                <version>${starters.version}</version>
            </dependency>
            <dependency>
                <groupId>com.wangbowang</groupId>
                <artifactId>mybatisplus-spring-boot-starter</artifactId>
                <version>${starters.version}</version>
            </dependency>

            <!-- axon -->
            <dependency>
                <groupId>com.wangbowang</groupId>
                <artifactId>axon-spring-boot-starter</artifactId>
                <version>${starters.version}</version>
            </dependency>

            <!--logging-->
            <dependency>
                <groupId>com.wangbowang</groupId>
                <artifactId>logging-spring-boot-starter</artifactId>
                <version>${starters.version}</version>
            </dependency>

            <!--web-->
            <dependency>
                <groupId>com.wangbowang</groupId>
                <artifactId>web-spring-boot-starter</artifactId>
                <version>${starters.version}</version>
            </dependency>

            <!--jpa-->
            <dependency>
                <groupId>com.wangbowang</groupId>
                <artifactId>jpa-spring-boot-starter</artifactId>
                <version>${starters.version}</version>
            </dependency>

            <!--druid-->
            <dependency>
                <groupId>com.wangbowang</groupId>
                <artifactId>druid-spring-boot-starter</artifactId>
                <version>${starters.version}</version>
            </dependency>

            <!--elasticsearch-->
            <dependency>
                <groupId>com.wangbowang</groupId>
                <artifactId>elasticsearch-spring-boot-starter</artifactId>
                <version>${starters.version}</version>
            </dependency>

            <!--quartz-->
            <dependency>
                <groupId>org.quartz-scheduler</groupId>
                <artifactId>quartz</artifactId>
                <version>${quartz.version}</version>
            </dependency>
            <dependency>
                <groupId>org.quartz-scheduler</groupId>
                <artifactId>quartz-jobs</artifactId>
                <version>${quartz.version}</version>
            </dependency>

            <!--axon framework-->
            <dependency>
                <groupId>org.axonframework</groupId>
                <artifactId>axon-core</artifactId>
                <version>${axon.version}</version>
            </dependency>
            <dependency>
                <groupId>org.axonframework</groupId>
                <artifactId>axon-spring</artifactId>
                <version>${axon.version}</version>
            </dependency>
            <dependency>
                <groupId>org.axonframework</groupId>
                <artifactId>axon-spring-boot-autoconfigure</artifactId>
                <version>${axon.version}</version>
            </dependency>
            <dependency>
                <groupId>org.axonframework</groupId>
                <artifactId>axon-amqp</artifactId>
                <version>${axon.version}</version>
            </dependency>
            <dependency>
                <groupId>org.axonframework</groupId>
                <artifactId>axon-mongo</artifactId>
                <version>${axon.version}</version>
            </dependency>
            <dependency>
                <groupId>org.axonframework</groupId>
                <artifactId>axon-spring-boot-starter</artifactId>
                <version>${axon.version}</version>
            </dependency>
            <dependency>
                <groupId>org.axonframework</groupId>
                <artifactId>axon-spring-boot-starter-jgroups</artifactId>
                <version>${axon.version}</version>
            </dependency>
            <dependency>
                <groupId>org.jgroups.kubernetes</groupId>
                <artifactId>jgroups-kubernetes</artifactId>
                <version>${jgroups-kubernetes.version}</version>
            </dependency>

            <dependency>
                <groupId>com.fasterxml.jackson.datatype</groupId>
                <artifactId>jackson-datatype-jsr310</artifactId>
                <version>${jsr310.version}</version>
            </dependency>

        </dependencies>
    </dependencyManagement>

    <distributionManagement>
        <repository>
            <id>nexus-releases</id>
            <name>Nexus Release Repository</name>
            <url>${nexus.releases}</url>
        </repository>
        <snapshotRepository>
            <id>nexus-snapshots</id>
            <name>Nexus Snapshot Repository</name>
            <url>${nexus.snapshots}</url>
        </snapshotRepository>
    </distributionManagement>

    <build>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-deploy-plugin</artifactId>
                <version>2.7</version>
                <configuration>
                    <uniqueVersion>false</uniqueVersion>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-source-plugin</artifactId>
                <version>2.4</version>
                <executions>
                    <execution>
                        <id>attach-sources</id>
                        <goals>
                            <goal>jar</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
        </plugins>

        <directory>${project.basedir}/target</directory>
        <outputDirectory>${project.build.directory}/classes</outputDirectory>
        <finalName>${project.artifactId}-${project.version}</finalName>
        <testOutputDirectory>${project.build.directory}/test-classes</testOutputDirectory>
        <sourceDirectory>${project.basedir}/src/main/java</sourceDirectory>
        <scriptSourceDirectory>src/main/scripts</scriptSourceDirectory>
        <testSourceDirectory>${project.basedir}/src/test/java</testSourceDirectory>
        <resources>
            <resource>
                <directory>${project.basedir}/src/main/resources</directory>
            </resource>
        </resources>
        <testResources>
            <testResource>
                <directory>${project.basedir}/src/test/resources</directory>
            </testResource>
        </testResources>

        <extensions>
            <extension>
                <groupId>kr.motd.maven</groupId>
                <artifactId>os-maven-plugin</artifactId>
                <version>${os.maven.plugin.version}</version>
            </extension>
        </extensions>

        <pluginManagement>
            <!-- NOTE: These plugins will be removed from future versions of the super POM -->
            <!-- They are kept for the moment as they are very unlikely to conflict with lifecycle mappings (MNG-4453) -->
            <plugins>
                <plugin>
                    <groupId>org.springframework.boot</groupId>
                    <artifactId>spring-boot-maven-plugin</artifactId>
                    <executions>
                        <execution>
                            <goals>
                                <goal>build-info</goal>
                            </goals>
                            <configuration>
                                <additionalProperties>
                                    <encoding.source>UTF-8</encoding.source>
                                    <encoding.reporting>UTF-8</encoding.reporting>
                                    <java.source>${maven.compiler.source}</java.source>
                                    <java.target>${maven.compiler.target}</java.target>
                                </additionalProperties>
                            </configuration>
                        </execution>
                    </executions>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-archetype-plugin</artifactId>
                    <version>${maven-archetype.version}</version>
                </plugin>
                <plugin>
                    <groupId>org.xolstice.maven.plugins</groupId>
                    <artifactId>protobuf-maven-plugin</artifactId>
                    <version>${protobuf.maven.plugin.version}</version>
                    <configuration>
                        <!--
                          The version of protoc must match protobuf-java. If you don't depend on
                          protobuf-java directly, you will be transitively depending on the
                          protobuf-java version that grpc depends on.
                        -->
                        <protocArtifact>com.google.protobuf:protoc:3.1.0-build2:exe:${os.detected.classifier}
                        </protocArtifact>
                        <pluginId>grpc-java</pluginId>
                        <pluginArtifact>io.grpc:protoc-gen-grpc-java:1.0.0:exe:${os.detected.classifier}
                        </pluginArtifact>
                    </configuration>
                    <executions>
                        <execution>
                            <goals>
                                <goal>compile</goal>
                                <goal>compile-custom</goal>
                            </goals>
                        </execution>
                    </executions>
                </plugin>
                <plugin>
                    <artifactId>maven-surefire-plugin</artifactId>
                    <configuration>
                        <skipTests>${skip.unit-tests}</skipTests>
                        <excludes>
                            <exclude>**/*IntegrationTests.java</exclude>
                        </excludes>
                    </configuration>
                </plugin>
                <plugin>
                    <artifactId>maven-failsafe-plugin</artifactId>
                    <executions>
                        <execution>
                            <id>integration-test</id>
                            <goals>
                                <goal>integration-test</goal>
                            </goals>
                            <configuration>
                                <skipTests>${skip.integration-tests}</skipTests>
                                <includes>
                                    <include>**/*IntegrationTests.class</include>
                                </includes>
                            </configuration>
                        </execution>
                    </executions>
                </plugin>
                <plugin>
                    <groupId>org.sonarsource.scanner.maven</groupId>
                    <artifactId>sonar-maven-plugin</artifactId>
                    <version>3.2</version>
                </plugin>
                <plugin>
                    <groupId>org.jacoco</groupId>
                    <artifactId>jacoco-maven-plugin</artifactId>
                    <version>0.7.8</version>
                    <configuration>
                        <destFile>${basedir}/target/coverage-reports/jacoco-unit.exec</destFile>
                        <dataFile>${basedir}/target/coverage-reports/jacoco-unit.exec</dataFile>
                    </configuration>
                    <executions>
                        <execution>
                            <id>jacoco-initialize</id>
                            <goals>
                                <goal>prepare-agent</goal>
                            </goals>
                        </execution>
                        <execution>
                            <id>jacoco-site</id>
                            <phase>package</phase>
                            <goals>
                                <goal>report</goal>
                            </goals>
                        </execution>
                    </executions>
                </plugin>
            </plugins>
        </pluginManagement>
    </build>
</project>